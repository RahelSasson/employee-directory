@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');
/* 
import for a google font called Quicksand
*/

/* target every element with the asterisk */
* {
  margin: 0; 
  font-family: "Quicksand"; /* font family of Quicksand with a textcolor of dark gray */
  color: #333;
}
.navbar {  /* stying for the navbar */ 
  padding: 20px;
  display: flex;
  align-items: center; /* vertically aligned in the center */ 
  max-width: 1000px;
  margin: 20px auto;
  border-bottom: 1px solid #c2bbbb; /* give the navbar a light gray border on the bottom */ 
}
.navbar h1 {  /* navbar h1 text is colored pink */ 
  color: #f1356d;
}
.navbar .search-container { 
  /* styling for navrbar child component "search-container" - which is the search bar --
  using flex and setting it to 1, to ensure the search bar is at least as big as the other elements within in for uniformity.
  finally, setting it in the center of the navrbar between the h1 and the home button */
  flex-grow: 1;
  text-align: center;
}
.search-bar {
  width: 40%;  
  /* the actual visible search bar will take up 40% of the space of the element which was sized to fit the other components 
  I did this because I realized that a search bar thats exactly the same size as the other elements feels unnatural to the eye */
  padding: .5rem; /* 50% of the elements font size spacing around the edges of the text */ 
  border: 1px solid #ccc;
  border-radius: 4px; /* round the corners a bit because an overly angular search bar also looks strange */ 
}
.navbar .links { 
  /* styling for navrbar child component "links" - represting the home button --
  shooting the links over to the right since we want our home button on the right of the navbar */ 
  margin-left: auto;
}
.navbar a { /* styling the links anchor */
  margin-left: 16px;
  text-decoration: none;
  padding: 6px;
}
.navbar a:hover { /* we want the button text to turn the same pretty pink color as the h1 when we hover over it */
  color: #f1356d;
}
.content {  
  /* the content which is surrounding the home component and give it a width of 1060, 
  which is 60px more than the navr bar to account of the spaces between the cards */
  max-width: 1060px;
  margin: 20px auto;
}

/* Flex container for cards */
.card-container {
  display: flex;
  flex-wrap: wrap;            /* Allow the cards to wrap to the next line */
  gap: 20px;                  /* Space between the cards */
  justify-content: space-evenly;  /* Distribute cards evenly across rows */
}

/* Each card item */
.employee-preview {
  flex: 1 1 calc(33.33% - 20px);  /* Cards will take 1/3 of the row width minus the gap space */
  box-sizing: border-box;         /* Make sure the card width includes the padding and gap */
  flex-grow: 0;
}

/* Make layout responsive */
@media (max-width: 768px) {
  .employee-preview {
      flex: 1 1 calc(50% - 20px);  /* 2 cards per row on medium-sized screens */
  }
}

@media (max-width: 480px) {
  .employee-preview {
      flex: 1 1 100%;  /* 1 card per row on small screens */
  }
}

/* Card Styles */
.card {
border-radius: 15px;
box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
overflow: hidden;
background-color: #fff;
}

.card:hover {
transform: translateY(-10px);
box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.card-img-top {
border-bottom: 2px solid #f0f0f0;
transition: transform 0.3s ease;
}

.card:hover .card-img-top {
transform: scale(1.05);
}

.card-body {
padding: 20px;
text-align: center;
}

.card-title {
font-size: 1.5rem;
font-weight: bold;
color: #333;
margin-bottom: 10px;
}

.card-text {
font-size: 1rem;
color: #666;
margin-bottom: 20px;
}

.card button {
background-color: #007bff;
color: white;
padding: 10px 20px;
border: none;
border-radius: 25px;
transition: background-color 0.3s ease, transform 0.3s ease;
}

.card button:hover {
background-color: #0056b3;
transform: translateY(-2px);
}

.card button:focus {
outline: none;
}
